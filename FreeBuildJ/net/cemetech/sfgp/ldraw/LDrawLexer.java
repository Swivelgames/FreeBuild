// Generated from /Users/thomas/FreeBuild/FreeBuildJ/net/cemetech/sfgp/ldraw/LDrawLexer.g4 by ANTLR 4.1
package net.cemetech.sfgp.ldraw;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class LDrawLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		FIVE=1, FOUR=2, THREE=3, TWO=4, ONE=5, ZERO=6, HEXINT=7, INT=8, FLOAT=9, 
		WS=10, EOL=11, STEP=12, PAUSE=13, WRITE=14, PRINT=15, CLEAR=16, SAVE=17, 
		COLOUR=18, CODE=19, VALUE=20, EDGE=21, ALPHA=22, LUMINANCE=23, CHROME=24, 
		PEARLESCENT=25, RUBBER=26, MATTE_METALLIC=27, METAL=28, MATERIAL=29, FILE=30, 
		BFC=31, NO=32, CERTIFICATION=33, ORIENTATION=34, CLIPPING=35, INVERTNEXT=36, 
		IDENT=37, STRING=38, GARBAGE=39;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'5'", "'4'", "'3'", "'2'", "'1'", "'0'", "HEXINT", "INT", "FLOAT", "WS", 
		"EOL", "'STEP'", "'PAUSE'", "WRITE", "'PRINT'", "'CLEAR'", "'SAVE'", "COLOUR", 
		"'CODE'", "'VALUE'", "'EDGE'", "'ALPHA'", "'LUMINANCE'", "'CHROME'", "'PEARLESCENT'", 
		"'RUBBER'", "'MATTE_METALLIC'", "'METAL'", "'MATERIAL'", "'FILE'", "'BFC'", 
		"'NO'", "'CERTIFY'", "ORIENTATION", "'CLIP'", "'INVERTNEXT'", "IDENT", 
		"STRING", "GARBAGE"
	};
	public static final String[] ruleNames = {
		"LETTER", "SPECIAL", "HEXPREFIX", "COLPREFIX", "DIGIT", "HEXDIGIT", "SIGN", 
		"EXP", "META_START", "FIVE", "FOUR", "THREE", "TWO", "ONE", "ZERO", "HEXINT", 
		"INT", "FLOAT", "WS", "EOL", "STEP", "PAUSE", "WRITE", "PRINT", "CLEAR", 
		"SAVE", "COLOUR", "CODE", "VALUE", "EDGE", "ALPHA", "LUMINANCE", "CHROME", 
		"PEARLESCENT", "RUBBER", "MATTE_METALLIC", "METAL", "MATERIAL", "FILE", 
		"BFC", "NO", "CERTIFICATION", "ORIENTATION", "CLIPPING", "INVERTNEXT", 
		"IDENT", "STRING", "GARBAGE"
	};


	public LDrawLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "LDrawLexer.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 18: WS_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip();  break;
		}
	}

	public static final String _serializedATN =
		"\3\uacf5\uee8c\u4f5d\u8b0d\u4a45\u78bd\u1b2f\u3378\2)\u01a4\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\3\2\3\2\3\3\3\3\3\4\3\4\3\4"+
		"\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\5\tu\n\t\3\t\6\tx\n\t\r\t\16"+
		"\ty\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20\3"+
		"\21\3\21\6\21\u008c\n\21\r\21\16\21\u008d\3\21\3\21\3\21\3\21\3\21\3\21"+
		"\3\21\3\21\5\21\u0098\n\21\3\22\5\22\u009b\n\22\3\22\6\22\u009e\n\22\r"+
		"\22\16\22\u009f\3\23\5\23\u00a3\n\23\3\23\6\23\u00a6\n\23\r\23\16\23\u00a7"+
		"\3\23\3\23\7\23\u00ac\n\23\f\23\16\23\u00af\13\23\3\23\5\23\u00b2\n\23"+
		"\3\23\5\23\u00b5\n\23\3\23\7\23\u00b8\n\23\f\23\16\23\u00bb\13\23\3\23"+
		"\3\23\6\23\u00bf\n\23\r\23\16\23\u00c0\3\23\5\23\u00c4\n\23\3\23\5\23"+
		"\u00c7\n\23\3\23\6\23\u00ca\n\23\r\23\16\23\u00cb\3\23\3\23\5\23\u00d0"+
		"\n\23\3\24\6\24\u00d3\n\24\r\24\16\24\u00d4\3\24\3\24\3\25\3\25\3\25\5"+
		"\25\u00dc\n\25\5\25\u00de\n\25\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27"+
		"\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\5\30\u00f1\n\30\3\31\3\31"+
		"\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33"+
		"\3\33\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35"+
		"\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3"+
		" \3 \3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3"+
		"#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3$\3$\3%\3%\3%\3%\3%\3%\3"+
		"%\3%\3%\3%\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3\'\3"+
		"\'\3\'\3\'\3(\3(\3(\3(\3(\3)\3)\3)\3)\3*\3*\3*\3+\3+\3+\3+\3+\3+\3+\3"+
		"+\3,\5,\u0179\n,\3,\3,\3,\3-\3-\3-\3-\3-\3.\3.\3.\3.\3.\3.\3.\3.\3.\3"+
		".\3.\3/\3/\3/\6/\u0191\n/\r/\16/\u0192\3/\5/\u0196\n/\3\60\3\60\6\60\u019a"+
		"\n\60\r\60\16\60\u019b\3\60\3\60\3\61\6\61\u01a1\n\61\r\61\16\61\u01a2"+
		"\4\u019b\u01a2\62\3\2\1\5\2\1\7\2\1\t\2\1\13\2\1\r\2\1\17\2\1\21\2\1\23"+
		"\2\1\25\3\1\27\4\1\31\5\1\33\6\1\35\7\1\37\b\1!\t\1#\n\1%\13\1\'\f\2)"+
		"\r\1+\16\1-\17\1/\20\1\61\21\1\63\22\1\65\23\1\67\24\19\25\1;\26\1=\27"+
		"\1?\30\1A\31\1C\32\1E\33\1G\34\1I\35\1K\36\1M\37\1O \1Q!\1S\"\1U#\1W$"+
		"\1Y%\1[&\1]\'\1_(\1a)\1\3\2\13\4\2C\\c|\t\2%%*+.\61<<]_aa\u0080\u0080"+
		"\3\2\62;\5\2\62;CHch\4\2--//\4\2GGgg\4\2\13\13\"\"\5\2\f\f\17\17$$\5\2"+
		"\13\f\17\17\"\"\u01b7\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2"+
		"\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3"+
		"\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3"+
		"\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3"+
		"\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2"+
		"\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2"+
		"Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\3c\3\2\2\2\5e\3"+
		"\2\2\2\7g\3\2\2\2\tj\3\2\2\2\13l\3\2\2\2\rn\3\2\2\2\17p\3\2\2\2\21r\3"+
		"\2\2\2\23{\3\2\2\2\25}\3\2\2\2\27\177\3\2\2\2\31\u0081\3\2\2\2\33\u0083"+
		"\3\2\2\2\35\u0085\3\2\2\2\37\u0087\3\2\2\2!\u0097\3\2\2\2#\u009a\3\2\2"+
		"\2%\u00cf\3\2\2\2\'\u00d2\3\2\2\2)\u00dd\3\2\2\2+\u00df\3\2\2\2-\u00e4"+
		"\3\2\2\2/\u00f0\3\2\2\2\61\u00f2\3\2\2\2\63\u00f8\3\2\2\2\65\u00fe\3\2"+
		"\2\2\67\u0103\3\2\2\29\u010b\3\2\2\2;\u0110\3\2\2\2=\u0116\3\2\2\2?\u011b"+
		"\3\2\2\2A\u0121\3\2\2\2C\u012b\3\2\2\2E\u0132\3\2\2\2G\u013e\3\2\2\2I"+
		"\u0145\3\2\2\2K\u0154\3\2\2\2M\u015a\3\2\2\2O\u0163\3\2\2\2Q\u0168\3\2"+
		"\2\2S\u016c\3\2\2\2U\u016f\3\2\2\2W\u0178\3\2\2\2Y\u017d\3\2\2\2[\u0182"+
		"\3\2\2\2]\u0195\3\2\2\2_\u0197\3\2\2\2a\u01a0\3\2\2\2cd\t\2\2\2d\4\3\2"+
		"\2\2ef\t\3\2\2f\6\3\2\2\2gh\7\62\2\2hi\7z\2\2i\b\3\2\2\2jk\7%\2\2k\n\3"+
		"\2\2\2lm\t\4\2\2m\f\3\2\2\2no\t\5\2\2o\16\3\2\2\2pq\t\6\2\2q\20\3\2\2"+
		"\2rt\t\7\2\2su\5\17\b\2ts\3\2\2\2tu\3\2\2\2uw\3\2\2\2vx\5\13\6\2wv\3\2"+
		"\2\2xy\3\2\2\2yw\3\2\2\2yz\3\2\2\2z\22\3\2\2\2{|\7#\2\2|\24\3\2\2\2}~"+
		"\7\67\2\2~\26\3\2\2\2\177\u0080\7\66\2\2\u0080\30\3\2\2\2\u0081\u0082"+
		"\7\65\2\2\u0082\32\3\2\2\2\u0083\u0084\7\64\2\2\u0084\34\3\2\2\2\u0085"+
		"\u0086\7\63\2\2\u0086\36\3\2\2\2\u0087\u0088\7\62\2\2\u0088 \3\2\2\2\u0089"+
		"\u008b\5\7\4\2\u008a\u008c\5\r\7\2\u008b\u008a\3\2\2\2\u008c\u008d\3\2"+
		"\2\2\u008d\u008b\3\2\2\2\u008d\u008e\3\2\2\2\u008e\u0098\3\2\2\2\u008f"+
		"\u0090\5\t\5\2\u0090\u0091\5\r\7\2\u0091\u0092\5\r\7\2\u0092\u0093\5\r"+
		"\7\2\u0093\u0094\5\r\7\2\u0094\u0095\5\r\7\2\u0095\u0096\5\r\7\2\u0096"+
		"\u0098\3\2\2\2\u0097\u0089\3\2\2\2\u0097\u008f\3\2\2\2\u0098\"\3\2\2\2"+
		"\u0099\u009b\5\17\b\2\u009a\u0099\3\2\2\2\u009a\u009b\3\2\2\2\u009b\u009d"+
		"\3\2\2\2\u009c\u009e\5\13\6\2\u009d\u009c\3\2\2\2\u009e\u009f\3\2\2\2"+
		"\u009f\u009d\3\2\2\2\u009f\u00a0\3\2\2\2\u00a0$\3\2\2\2\u00a1\u00a3\5"+
		"\17\b\2\u00a2\u00a1\3\2\2\2\u00a2\u00a3\3\2\2\2\u00a3\u00a5\3\2\2\2\u00a4"+
		"\u00a6\5\13\6\2\u00a5\u00a4\3\2\2\2\u00a6\u00a7\3\2\2\2\u00a7\u00a5\3"+
		"\2\2\2\u00a7\u00a8\3\2\2\2\u00a8\u00a9\3\2\2\2\u00a9\u00ad\7\60\2\2\u00aa"+
		"\u00ac\5\13\6\2\u00ab\u00aa\3\2\2\2\u00ac\u00af\3\2\2\2\u00ad\u00ab\3"+
		"\2\2\2\u00ad\u00ae\3\2\2\2\u00ae\u00b1\3\2\2\2\u00af\u00ad\3\2\2\2\u00b0"+
		"\u00b2\5\21\t\2\u00b1\u00b0\3\2\2\2\u00b1\u00b2\3\2\2\2\u00b2\u00d0\3"+
		"\2\2\2\u00b3\u00b5\5\17\b\2\u00b4\u00b3\3\2\2\2\u00b4\u00b5\3\2\2\2\u00b5"+
		"\u00b9\3\2\2\2\u00b6\u00b8\5\13\6\2\u00b7\u00b6\3\2\2\2\u00b8\u00bb\3"+
		"\2\2\2\u00b9\u00b7\3\2\2\2\u00b9\u00ba\3\2\2\2\u00ba\u00bc\3\2\2\2\u00bb"+
		"\u00b9\3\2\2\2\u00bc\u00be\7\60\2\2\u00bd\u00bf\5\13\6\2\u00be\u00bd\3"+
		"\2\2\2\u00bf\u00c0\3\2\2\2\u00c0\u00be\3\2\2\2\u00c0\u00c1\3\2\2\2\u00c1"+
		"\u00c3\3\2\2\2\u00c2\u00c4\5\21\t\2\u00c3\u00c2\3\2\2\2\u00c3\u00c4\3"+
		"\2\2\2\u00c4\u00d0\3\2\2\2\u00c5\u00c7\5\17\b\2\u00c6\u00c5\3\2\2\2\u00c6"+
		"\u00c7\3\2\2\2\u00c7\u00c9\3\2\2\2\u00c8\u00ca\5\13\6\2\u00c9\u00c8\3"+
		"\2\2\2\u00ca\u00cb\3\2\2\2\u00cb\u00c9\3\2\2\2\u00cb\u00cc\3\2\2\2\u00cc"+
		"\u00cd\3\2\2\2\u00cd\u00ce\5\21\t\2\u00ce\u00d0\3\2\2\2\u00cf\u00a2\3"+
		"\2\2\2\u00cf\u00b4\3\2\2\2\u00cf\u00c6\3\2\2\2\u00d0&\3\2\2\2\u00d1\u00d3"+
		"\t\b\2\2\u00d2\u00d1\3\2\2\2\u00d3\u00d4\3\2\2\2\u00d4\u00d2\3\2\2\2\u00d4"+
		"\u00d5\3\2\2\2\u00d5\u00d6\3\2\2\2\u00d6\u00d7\b\24\2\2\u00d7(\3\2\2\2"+
		"\u00d8\u00de\7\f\2\2\u00d9\u00db\7\17\2\2\u00da\u00dc\7\f\2\2\u00db\u00da"+
		"\3\2\2\2\u00db\u00dc\3\2\2\2\u00dc\u00de\3\2\2\2\u00dd\u00d8\3\2\2\2\u00dd"+
		"\u00d9\3\2\2\2\u00de*\3\2\2\2\u00df\u00e0\7U\2\2\u00e0\u00e1\7V\2\2\u00e1"+
		"\u00e2\7G\2\2\u00e2\u00e3\7R\2\2\u00e3,\3\2\2\2\u00e4\u00e5\7R\2\2\u00e5"+
		"\u00e6\7C\2\2\u00e6\u00e7\7W\2\2\u00e7\u00e8\7U\2\2\u00e8\u00e9\7G\2\2"+
		"\u00e9.\3\2\2\2\u00ea\u00eb\7Y\2\2\u00eb\u00ec\7T\2\2\u00ec\u00ed\7K\2"+
		"\2\u00ed\u00ee\7V\2\2\u00ee\u00f1\7G\2\2\u00ef\u00f1\5\61\31\2\u00f0\u00ea"+
		"\3\2\2\2\u00f0\u00ef\3\2\2\2\u00f1\60\3\2\2\2\u00f2\u00f3\7R\2\2\u00f3"+
		"\u00f4\7T\2\2\u00f4\u00f5\7K\2\2\u00f5\u00f6\7P\2\2\u00f6\u00f7\7V\2\2"+
		"\u00f7\62\3\2\2\2\u00f8\u00f9\7E\2\2\u00f9\u00fa\7N\2\2\u00fa\u00fb\7"+
		"G\2\2\u00fb\u00fc\7C\2\2\u00fc\u00fd\7T\2\2\u00fd\64\3\2\2\2\u00fe\u00ff"+
		"\7U\2\2\u00ff\u0100\7C\2\2\u0100\u0101\7X\2\2\u0101\u0102\7G\2\2\u0102"+
		"\66\3\2\2\2\u0103\u0104\5\23\n\2\u0104\u0105\7E\2\2\u0105\u0106\7Q\2\2"+
		"\u0106\u0107\7N\2\2\u0107\u0108\7Q\2\2\u0108\u0109\7W\2\2\u0109\u010a"+
		"\7T\2\2\u010a8\3\2\2\2\u010b\u010c\7E\2\2\u010c\u010d\7Q\2\2\u010d\u010e"+
		"\7F\2\2\u010e\u010f\7G\2\2\u010f:\3\2\2\2\u0110\u0111\7X\2\2\u0111\u0112"+
		"\7C\2\2\u0112\u0113\7N\2\2\u0113\u0114\7W\2\2\u0114\u0115\7G\2\2\u0115"+
		"<\3\2\2\2\u0116\u0117\7G\2\2\u0117\u0118\7F\2\2\u0118\u0119\7I\2\2\u0119"+
		"\u011a\7G\2\2\u011a>\3\2\2\2\u011b\u011c\7C\2\2\u011c\u011d\7N\2\2\u011d"+
		"\u011e\7R\2\2\u011e\u011f\7J\2\2\u011f\u0120\7C\2\2\u0120@\3\2\2\2\u0121"+
		"\u0122\7N\2\2\u0122\u0123\7W\2\2\u0123\u0124\7O\2\2\u0124\u0125\7K\2\2"+
		"\u0125\u0126\7P\2\2\u0126\u0127\7C\2\2\u0127\u0128\7P\2\2\u0128\u0129"+
		"\7E\2\2\u0129\u012a\7G\2\2\u012aB\3\2\2\2\u012b\u012c\7E\2\2\u012c\u012d"+
		"\7J\2\2\u012d\u012e\7T\2\2\u012e\u012f\7Q\2\2\u012f\u0130\7O\2\2\u0130"+
		"\u0131\7G\2\2\u0131D\3\2\2\2\u0132\u0133\7R\2\2\u0133\u0134\7G\2\2\u0134"+
		"\u0135\7C\2\2\u0135\u0136\7T\2\2\u0136\u0137\7N\2\2\u0137\u0138\7G\2\2"+
		"\u0138\u0139\7U\2\2\u0139\u013a\7E\2\2\u013a\u013b\7G\2\2\u013b\u013c"+
		"\7P\2\2\u013c\u013d\7V\2\2\u013dF\3\2\2\2\u013e\u013f\7T\2\2\u013f\u0140"+
		"\7W\2\2\u0140\u0141\7D\2\2\u0141\u0142\7D\2\2\u0142\u0143\7G\2\2\u0143"+
		"\u0144\7T\2\2\u0144H\3\2\2\2\u0145\u0146\7O\2\2\u0146\u0147\7C\2\2\u0147"+
		"\u0148\7V\2\2\u0148\u0149\7V\2\2\u0149\u014a\7G\2\2\u014a\u014b\7a\2\2"+
		"\u014b\u014c\7O\2\2\u014c\u014d\7G\2\2\u014d\u014e\7V\2\2\u014e\u014f"+
		"\7C\2\2\u014f\u0150\7N\2\2\u0150\u0151\7N\2\2\u0151\u0152\7K\2\2\u0152"+
		"\u0153\7E\2\2\u0153J\3\2\2\2\u0154\u0155\7O\2\2\u0155\u0156\7G\2\2\u0156"+
		"\u0157\7V\2\2\u0157\u0158\7C\2\2\u0158\u0159\7N\2\2\u0159L\3\2\2\2\u015a"+
		"\u015b\7O\2\2\u015b\u015c\7C\2\2\u015c\u015d\7V\2\2\u015d\u015e\7G\2\2"+
		"\u015e\u015f\7T\2\2\u015f\u0160\7K\2\2\u0160\u0161\7C\2\2\u0161\u0162"+
		"\7N\2\2\u0162N\3\2\2\2\u0163\u0164\7H\2\2\u0164\u0165\7K\2\2\u0165\u0166"+
		"\7N\2\2\u0166\u0167\7G\2\2\u0167P\3\2\2\2\u0168\u0169\7D\2\2\u0169\u016a"+
		"\7H\2\2\u016a\u016b\7E\2\2\u016bR\3\2\2\2\u016c\u016d\7P\2\2\u016d\u016e"+
		"\7Q\2\2\u016eT\3\2\2\2\u016f\u0170\7E\2\2\u0170\u0171\7G\2\2\u0171\u0172"+
		"\7T\2\2\u0172\u0173\7V\2\2\u0173\u0174\7K\2\2\u0174\u0175\7H\2\2\u0175"+
		"\u0176\7[\2\2\u0176V\3\2\2\2\u0177\u0179\7E\2\2\u0178\u0177\3\2\2\2\u0178"+
		"\u0179\3\2\2\2\u0179\u017a\3\2\2\2\u017a\u017b\7E\2\2\u017b\u017c\7Y\2"+
		"\2\u017cX\3\2\2\2\u017d\u017e\7E\2\2\u017e\u017f\7N\2\2\u017f\u0180\7"+
		"K\2\2\u0180\u0181\7R\2\2\u0181Z\3\2\2\2\u0182\u0183\7K\2\2\u0183\u0184"+
		"\7P\2\2\u0184\u0185\7X\2\2\u0185\u0186\7G\2\2\u0186\u0187\7T\2\2\u0187"+
		"\u0188\7V\2\2\u0188\u0189\7P\2\2\u0189\u018a\7G\2\2\u018a\u018b\7Z\2\2"+
		"\u018b\u018c\7V\2\2\u018c\\\3\2\2\2\u018d\u0191\5\3\2\2\u018e\u0191\5"+
		"\13\6\2\u018f\u0191\5\5\3\2\u0190\u018d\3\2\2\2\u0190\u018e\3\2\2\2\u0190"+
		"\u018f\3\2\2\2\u0191\u0192\3\2\2\2\u0192\u0190\3\2\2\2\u0192\u0193\3\2"+
		"\2\2\u0193\u0196\3\2\2\2\u0194\u0196\5_\60\2\u0195\u0190\3\2\2\2\u0195"+
		"\u0194\3\2\2\2\u0196^\3\2\2\2\u0197\u0199\7$\2\2\u0198\u019a\n\t\2\2\u0199"+
		"\u0198\3\2\2\2\u019a\u019b\3\2\2\2\u019b\u019c\3\2\2\2\u019b\u0199\3\2"+
		"\2\2\u019c\u019d\3\2\2\2\u019d\u019e\7$\2\2\u019e`\3\2\2\2\u019f\u01a1"+
		"\n\n\2\2\u01a0\u019f\3\2\2\2\u01a1\u01a2\3\2\2\2\u01a2\u01a3\3\2\2\2\u01a2"+
		"\u01a0\3\2\2\2\u01a3b\3\2\2\2\36\2ty\u008d\u0097\u009a\u009f\u00a2\u00a7"+
		"\u00ad\u00b1\u00b4\u00b9\u00c0\u00c3\u00c6\u00cb\u00cf\u00d4\u00db\u00dd"+
		"\u00f0\u0178\u0190\u0192\u0195\u019b\u01a2";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}